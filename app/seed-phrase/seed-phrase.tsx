"use client"
import React, { useState } from 'react'
import * as bip39 from 'bip39';

const SeedPhrase = () => {
  const [outputValue, setOutputValue]=useState("");
  const [bttnText, setBttnText] = useState("Copy");
  const [btnEnable, setBtnEnable] = useState(true);


  const [length, setLength] = useState(12); // Default to 12 words

  const generateSeedPhrase = () => {
    const newPhrase = bip39.generateMnemonic(length === 12 ? 128 : 256);
    setOutputValue(newPhrase);
  };


  const copyCode = () => {
    setBtnEnable(false);
    navigator.clipboard
      .writeText(outputValue)
      .then(() => {
        setBttnText("Copied");
        setTimeout(function () {
          setBttnText("Copy");
          setBtnEnable(true);

        }, 3000);
      });
  };

  return (
    <div className='row' style={{margin:"0 auto"}}>
        <div className="col-12">
            <div className='bg-white p-3 mt-3 mb-5'>
                  <div className='d-flex'>
                      <div className='mr-5 p-1'>
                              Phrase Length :                   
                      </div>
                      <div className='border-1 p-1'>
                        <select value={length} onChange={(e) => setLength(Number(e.target.value))}>
                          <option value={12}>12 Words</option>
                          <option value={16}>16 Words</option>
                          <option value={24}>24 Words</option>
                        </select> 
                      </div>
                      
                  </div>
                  
                  <div className='row justify-center'>
                      <button onClick={generateSeedPhrase} className="btn btn-success mt-3 mb-3 col-4">Encode</button><br></br>
                  </div>

            </div>

              
            <div className='bg-white p-3 mt-3 mb-5'>
                  <label htmlFor="outputValue">Output Value</label>
                <textarea className="form-control mt-2" rows={2} id="outputValue" value={outputValue} readOnly/>

                <div className='row justify-center'>
                    <button className="btn btn-link mt-3 mb-3 col-4" disabled={outputValue==""?true:!btnEnable} onClick={copyCode}><i className="bi bi-copy"></i> {bttnText}</button><br></br>
                </div>
            </div>
            <div className='bg-white p-5 mt-3 mb-5'>

                  <h5>1. What is a seed phrase?</h5>
                  <p>A seed phrase is a sequence of words that serves as a human-readable backup for a cryptocurrency wallet, allowing users to recover their funds if they lose access to the wallet.</p>

                  <h5>2. How is a seed phrase generated?</h5>
                  <p>Seed phrases are generated by the wallet software using a standard algorithm (BIP39) to create a random list of words from a predefined word list.</p>

                  <h5>3. Why is it important to keep my seed phrase secure?</h5>
                  <p>Your seed phrase is the key to your cryptocurrency assets. Anyone who has access to it can fully control your wallet and its contents, making it vital to store it securely.</p>

                  <h5>4. How can I recover my wallet using a seed phrase?</h5>
                  <p>To recover your wallet, open your wallet software and look for the option to restore from a seed phrase. Enter your seed phrase when prompted, and the software will regenerate your wallet.</p>

                  <h5>5. What should I do if I lose my seed phrase?</h5>
                  <p>If you lose your seed phrase, you will likely lose access to your cryptocurrency assets permanently. It is recommended to back up your seed phrase securely and store it in multiple locations.</p>

                  <h5>6. Can I change my seed phrase?</h5>
                  <p>Seed phrases cannot be changed directly. To create a new seed phrase, you would need to create a new wallet and transfer your funds from the old wallet to the new one.</p>

            </div>
        </div>
    </div>
  )
}

export default SeedPhrase